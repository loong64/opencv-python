name: Custom build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Build with specific tag'
        required: true
        default: ''

jobs:
  Build:
    name: Build with_contrib ${{ matrix.with_contrib }} without_gui ${{ matrix.without_gui }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
        platform: [x64]
        with_contrib: [0, 1]
        without_gui: [0, 1]
        build_sdist: [0]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      REPO_DIR: .
      PROJECT_SPEC: opencv-python
      MB_PYTHON_VERSION: ${{ matrix.python-version }}
      TRAVIS_PYTHON_VERSION: ${{ matrix.python-version }}
      MB_ML_VER: _2_38
      TRAVIS_BUILD_DIR: ${{ github.workspace }}
      CONFIG_PATH: travis_config.sh
      DOCKER_IMAGE: ghcr.io/loong64/opencv-python-manylinux_2_38-loongarch64:latest
      USE_CCACHE: 0
      UNICODE_WIDTH: 32
      PLAT: loongarch64
      SDIST: ${{ matrix.build_sdist || 0 }}
      ENABLE_HEADLESS: ${{ matrix.without_gui }}
      ENABLE_CONTRIB: ${{ matrix.with_contrib }}
      VERSION: ${{ github.event.inputs.tag }}
    steps:
    - name: Cleanup
      run: find . -mindepth 1 -delete
      working-directory: ${{ github.workspace }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: opencv/opencv-python
        ref: ${{ env.VERSION }}
        submodules: false
        fetch-depth: 0
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3
    - name: Build a package
      run: source scripts/build.sh
      env:
        DOCKER_DEFAULT_PLATFORM: linux/loong64
    - name: Saving a wheel accordingly to matrix
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.with_contrib }}-${{ matrix.without_gui }}-${{ matrix.build_sdist }}
        path: wheelhouse/opencv*.whl